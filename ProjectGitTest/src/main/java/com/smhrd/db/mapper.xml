<?xml version="1.0" encoding="UTF-8" ?>
<!-- sql 문장입력하는 파일 -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smhrd.db.mapper">
<!-- id : dao 호출 시 매칭을 위해 사용하는 id 값 (모든 태그에 필수) -->
<!-- parameterType : dao에서 넘겨주는 데이터, sql 완성 시 필요한 데이터 -->
<!-- #{?} {}중 괄호는 객체 안 필드에 만들어준 이름 작성 -->

<!-- 회원가입(insert)  -->
<insert id="join" parameterType="MemberVO">
	insert into member values(#{email},#{pw},#{tel},#{addr})
</insert>
  
  <!-- 로그인(select) -->
  <!--select 할 때  resultType ="" 필요  
  : 읽어온 결과를 어떤 타입으로 묶어서 돌려줄것인지 지정-->
 <select id="login" resultType ="MemberVO" parameterType="MemberVO">
 	select * from member where email = #{email} and pw = #{pw}
 </select>
 
 <!-- 회원정보 수정(Update) -->
 <update id="mbupdate" parameterType="MemberVO">
 	update member set pw = #{pw}, tel = #{tel}, addr = #{addr} 
 	where email = #{email}
 </update>
 
 <!-- 전체 회원 정보 불러오기 -->
 <!-- 읽어온 값이 여러개인 경우에는 기본적으로 List<객체의 타입(resultType)>로 반환 -->
 <select id="selectAll" resultType ="MemberVO">
 	select * from member
 </select>
 
 <!-- 회원삭제(delete) -->
 <!-- parameterType 이 기본타입 한개면 생략가능  -->
 <!-- #{} 넘어오는 값이 한개면 비워두거나 아무거나 작성 가능-->
  <delete id="delete" parameterType="String">
  	delete from member where email =  #{email}
  </delete>
  
  

</mapper>